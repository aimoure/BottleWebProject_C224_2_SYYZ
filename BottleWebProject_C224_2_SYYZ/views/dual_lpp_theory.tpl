% rebase('layout.tpl', title=title, year=year)

<!-- Подключение MathJax -->
<script src="https://polyfill.io/v3/polyfill.min.js?features=es6"></script>
<script id="MathJax-script" async
  src="https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js"></script>

<div class="hungarian-page">

    <div class="jumbotron">
        <h1>Двойственная задача линейного программирования</h1>
        <p class="lead">Как двойственная задача помогает анализировать, оптимизировать и интерпретировать экономические задачи</p>
    </div>

    <div class="container">
        <h2>Что такое двойственная задача?</h2>
        <p>
            Двойственная задача линейного программирования (ЗЛП) формируется на основе прямой задачи. Она позволяет 
            получить альтернативное решение, а также оценить чувствительность исходной задачи и интерпретировать значения 
            двойственных переменных (теневых цен).
        </p>
        <p>
            Формально, если прямая задача имеет вид:
        </p>
        <p style="text-align: center">
            \[
            \text{Максимизировать} \ Z = c_1 x_1 + c_2 x_2 + \ldots + c_n x_n
            \]
            \[
            \text{при условиях:} \ a_{1}x_{1} + a_{2}x_{2} + \ldots + a_{n}x_{n} \leq b_{i}
            \]
        </p>
        <p>
            То двойственная задача будет:
        </p>
        <p style="text-align: center">
            \[
            \text{Минимизировать} \ W = b_1 y_1 + b_2 y_2 + \ldots + b_m y_m
            \]
            \[
            \text{при условиях:} \ a_{1}y_{1} + a_{2}y_{2} + \ldots + a_{m}y_{m} \geq c_{j}
            \]
        </p>
        <p style="text-align: center">
            где \( y_i \geq 0 \).
        </p>

        <h2>Решение двойственной задачи симплекс-методом</h2>
        <p>
            Двойственная задача решается с использованием классического симплекс-метода. Процесс включает следующие шаги:
        </p>

        <h3>Шаг 1: Преобразование к стандартной форме</h3>
        <p>
            Все неравенства вида \( \geq \) приводятся к уравнениям путём введения дополнительных переменных.
        </p>

        <h3>Шаг 2: Составление начальной симплекс-таблицы</h3>
        <p>
            Формируется начальная таблица, где строки — ограничения, а последняя строка — целевая функция.
        </p>

        <div class="float-text">
        <h3>Шаг 3: Итерации симплекс-метода</h3>
        <p>У нас есть 5 организаторов и 5 задач:</p>
        <ul>
            <li>Проверить оптимальность текущего решения (отрицательные коэффициенты в последней строке таблицы).а</li>
            <li>Если решение не оптимально, выбрать разрешающий столбец (наиболее отрицательный коэффициент), затем 
            разрешающую строку (минимальное положительное отношение правой части к элементу столбца).</li>
            <li>Пересчитать таблицу:</li>
        </ul>

    </div>
        <p style="text-align: center">
            \[
            a'_{ij} = a_{ij} - \frac{a_{iq} \cdot a_{pj}}{a_{pq}}
            \]
        </p>
        <p style="text-align: center">
            где \( p \) — разрешающая строка, \( q \) — разрешающий столбец.
        </p>

        <h3>Шаг 4: Получение решения</h3>
        <p>
            По завершении итераций извлекаются значения переменных \( y_i \) и значение целевой функции \( W \).
        </p>

        <hr>
        <p><em>Данный метод позволяет не только решать задачу альтернативным методом, но и глубже анализировать результаты и ресурсы в задачах линейного программирования.</em></p>

    </div>
</div>